The ``7-base_geometry`` module
========================

using ``BaseGeometry``
------------------

    >>> Geometry = __import__('7-base_geometry').BaseGeometry

    >>> base = Geometry()

    >>> base.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> base.integer_validator('yu', 'uy')
    Traceback (most recent call last):
    TypeError: yu must be an integer

    >>> base.integer_validator('yu', [7.7])
    Traceback (most recent call last):
    TypeError: yu must be an integer

    >>> base.integer_validator('yu', (9))

    >>> base.integer_validator((9), (9))

    >>> base.integer_validator(9)
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'
    
    >>> base.integer_validator('maronni', 0)
    Traceback (most recent call last):
    ValueError: maronni must be greater than 0

    >>> base.integer_validator("float", 1.0)
    Traceback (most recent call last):
    TypeError: float must be an integer

    >> base.integer_validator("None", None)
    Traceback (most recent call last):
    TypeError: None must be an integer

    >>> base.integer_validator("integer", 2795)

    >>> base.integer_validator("negative_float", -1.0)
    Traceback (most recent call last):
    TypeError: negative_float must be an integer

    >>> base.area(0)
    Traceback (most recent call last):
    TypeError: area() takes 1 positional argument but 2 were given

    >>> base.integer_validator("boolean", True)
    Traceback (most recent call last):
    TypeError: boolean must be an integer

    >>> base.integer_validator("list", [0, 1, 2, 3])
    Traceback (most recent call last):
    TypeError: list must be an integer

    >>> base.integer_validator("set", set([0, 1, 2, 3]))
    Traceback (most recent call last):
    TypeError: set must be an integer

    base.integer_validator(-2, 'maronni')
    Traceback (most recent call last):
    TypeError: -2 must be an integer

    >>> base.area()
    Traceback (most recent call last):
    Exception: area() is not implemented
