The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__('0-add_integer').add_integer

	Now use it:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(1)
	99

	>>> add_integer(1.0)
	99

	>>> add_integer(1, 2)
	3

	>>> add_integer(1.0, 3.0)
	4

	>>> add_integer(1, 3.0)
	4

	>>> add_integer(1.0, 3)
	4

	>>> add_integer("1")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer("1", 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(1, "string")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer("1", "2")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(float('nan'),1)
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

	>>> add_integer(float('inf'),1)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer